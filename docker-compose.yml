version: '3'

services:
    venv:
        build:
            context: .
            dockerfile: Dockerfile.venv
        image: elifesciences/profiles_venv:${IMAGE_TAG}
    web:
        image: nginx:1.13.7
        ports:
            - "8080:80"
        volumes:
            - ./config/nginx-default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - wsgi
    wsgi:
        build: 
            context: .
            dockerfile: Dockerfile
            args:
                image_tag: "${IMAGE_TAG}"
        image: elifesciences/profiles:${IMAGE_TAG}
        command: venv/bin/newrelic-admin run-program venv/bin/uwsgi --ini=/srv/profiles/uwsgi.ini --enable-threads
        volumes:
            - ./config/app.cfg:/srv/profiles/app.cfg
            - ./config/clients.yaml:/srv/profiles/clients.yaml
            - ./config/uwsgi.ini:/srv/profiles/uwsgi.ini
            - logs:/srv/profiles/var/logs
        env_file:
            - dev.env
        depends_on:
            - goaws
            - migrate
            - orcid_dummy
            - venv
    db:
        image: postgres:9.4
        volumes:
            - ./config/application_user.sql:/docker-entrypoint-initdb.d/application_user.sql
        env_file:
            - dev.env
    migrate:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                image_tag: "${IMAGE_TAG}"
        image: elifesciences/profiles:${IMAGE_TAG}
        command: bash -c "wait_for_port 5432 60 db && venv/bin/python manage.py db upgrade"
        volumes:
            - ./config/app.cfg:/srv/profiles/app.cfg
            - ./config/clients.yaml:/srv/profiles/clients.yaml
            - logs:/srv/profiles/var/logs
        env_file:
            - dev.env
        depends_on:
            - db
            - venv
    orcid_dummy:
        image: elifesciences/orcid-dummy:${DEPENDENCIES_ORCID_DUMMY}
    goaws:
        image: elifesciences/goaws:1.0.1
        ports:
            - 4100:4100
        volumes:
            - ./config/goaws.yaml:/conf/goaws.yaml

volumes:
    logs:
